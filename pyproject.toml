[build-system]
requires = ["setuptools>=63.4.2", "setuptools_scm[toml]>=7.1.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "iterative_ensemble_smoother"
description="A library for the iterative ensemble smoother algorithm."
readme = "README.md"
classifiers=[
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = ["numpy", "scipy"]
dynamic=["version"] # setuptools_scm extracts Python package versions from git

authors = [
    {name="Equinor", email="fg_sib-scout@equinor.com"},
]

maintainers = [
    {name="Eivind Jahren", email="ejah@equinor.com"},
    {name="Feda Curic", email="fcur@equinor.com"},
]

[project.license]
text = "GPL-3.0"

[project.urls]
"Homepage" = "https://github.com/equinor/iterative_ensemble_smoother"
"Repository" = "https://github.com/equinor/iterative_ensemble_smoother"
"Bug Tracker" = "https://github.com/equinor/iterative_ensemble_smoother/issues"
"Documentation" = "https://iterative_ensemble_smoother.readthedocs.io/en/stable/"

[project.optional-dependencies]
doc = [
    "sphinx",
    "pydata_sphinx_theme",
    "jupyter_sphinx",
    "sphinxcontrib.bibtex",
    "matplotlib",
    "pygments",
    "jupytext",
    "pandas",
    "p_tqdm",
    "ipykernel",
    "ipywidgets",
    "numpydoc",
    "scipy",
    "jinja2",
    "m2r2",
    "myst_nb"
]
dev = [
    "pytest",
    "pytest-snapshot",
    "pytest-memray",
    "tox",
    "pre-commit",
    "matplotlib",
    "scipy",
    "mypy",
    "pandas",
    "p_tqdm",
    "pylint"
]

# setuptools_scm also writes the version to a file so that one can use the
# __version__ attribute from the package
[tool.setuptools_scm]
write_to = "src/iterative_ensemble_smoother/_version.py"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]

[tool.ruff]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I"
]
src = ["src", "tests", "docs"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
